#include <iostream>
#include <unordered_map> // for unordered_map

using namespace std;

void countFreq(int arr[], int n) {
    unordered_map<int, int> hmp; // Declaration of unordered_map to store element frequencies
    
    // Count frequencies of each element in the array
    for (int i = 0; i < n; i++) {
        int key = arr[i];
        if (hmp.find(arr[i]) != hmp.end()) {
            hmp[arr[i]]++;
        } else {
            hmp[arr[i]] = 1;
        }
    }
    
    // Print the frequencies
    for (auto itr = hmp.begin(); itr != hmp.end(); itr++) {
        cout << itr->first << " " << itr->second << endl;
    }
}

int main() {
    int arr[] = {3112102, 3112500, 3112501, 3112700, 3112800, 3112800, 3112900, 3113102, 3113302, 3113400, 3113401, 3113500, 3115300, 3115400, 3115500, 3115600, 3115700, 3115800, 3116101, 3116102, 3116103, 3116104, 3116105, 3117101, 3117102, 3117103, 3117104, 3117300, 3118201, 3118202, 3118203, 3118204, 3119101, 3119102, 3119104, 3119105, 3122200, 3122300, 3122400, 3123101, 3123101, 3123102, 3123102, 3123200, 3123300, 3123301, 3123500, 3123600, 3123600, 3124100, 3124101, 3124102, 3124103, 3125100, 3125101, 3125102, 3132100, 3132101, 3132101, 3132400, 3132500, 3132600, 3132700, 3132800, 3133101, 3133102, 3133109, 3133201, 3133202, 3133203, 3133208, 3133208, 3133209, 3133500, 3133600, 3133700, 3135200, 3135300, 3135400, 3135500, 3135600, 3135700, 3135800, 3135800, 3152101, 3152201, 3152202, 3152203, 3152206, 3152301, 3152302, 3152303, 3152400, 3152500, 3153101, 3153103, 3153104, 3153105, 3153401, 3153402, 3153403, 3153404, 3153500, 3153600, 3153700, 3154102, 3154201, 3154202, 3154400, 3154401, 3154600, 3155300, 3155301, 3155401, 3155402, 3155403, 3155404, 3155500, 3155501, 3155600, 3155601, 3156101, 3156102, 3156103, 3156104, 3156105, 3156106, 3156107, 3156108, 3156200, 3156300, 3156301, 3156400, 3157101, 3157102, 3157103, 3157104, 3157105, 3212101, 3212120, 3212200, 3212501, 3212502, 3212503, 3212506, 3212507, 3212703, 3213401, 3213402, 3213403, 3213404, 3213405, 3213406, 3213407, 3214100, 3214205, 3214206, 3214207, 3214208, 3214209, 3214402, 3214503, 3215201, 3215202, 3215203, 3215204, 3215206, 3215207, 3216201, 3216202, 3216203, 3216204, 3216205, 3216206, 3216207, 3216208, 3222102, 3222103, 3222104, 3222301, 3222302, 3222303, 3222308, 3222500, 3222600, 3223101, 3223102, 3223109, 3223110, 3223114, 3223203, 3223206, 3224108, 3224109, 3224110, 3224114, 3224201, 3224202, 3225101, 3225102, 3225102, 3225103, 3225104, 3225105, 3225106, 3232202, 3232203, 3232205, 3232207, 3232401, 3232402, 3232403, 3232501, 3232503, 3232504, 3233101, 3233103, 3233105, 3233107, 3233109, 3233111, 3233113, 3233115, 3234100, 3234101, 3234102, 3234103, 3234104, 3234105, 3234106, 3234107, 3242102, 3242201, 3242202, 3242203, 3242301, 3242302, 3242303, 3242600, 3242705, 3243101, 3243401, 3243402, 3243403, 3243404, 3243501, 3243502, 3243503, 3243504, 3243701, 3243702, 3314101, 3314102, 3314103, 3314104, 3314202, 3314203, 3314204, 3314205, 3314208, 3315101, 3315101, 3315102, 3315103, 3315104, 3315104, 3315105, 3315114, 3315201, 3316101, 3316102, 3316103, 3316104, 3316105, 3316201, 3316202, 3316203, 3317101, 3317102, 3317103, 3317104, 3317105, 3318101, 3318102, 3318103, 3318104, 3318105, 3318106, 3318112, 3332103, 3332201, 3332202, 3332208, 3332300, 3332301, 3332401, 3332402, 3333101, 3333103, 3333105, 3333106, 3333502, 3333503, 3333600, 3334201, 3334202, 3334203, 3334204, 3334208, 3335100, 3335101, 3335102, 3335103, 3335104, 3335105, 3335106, 3335107, 3335108, 3335109, 3335110, 3336101, 3336102, 3336103, 3336104, 3336110, 3336209, 3336209, 3342101, 3342102, 3342103, 3342104, 3342109, 3342109, 3342301, 3342301, 3342302, 3342302, 3342302, 3342304, 3342304, 3342601, 3342601, 3342602, 3342603, 3343101, 3343102, 3343102, 3343103, 3343103, 3343104, 3343105, 3343106, 3343107, 3343108, 3343119, 3412400, 3412401, 3412501, 3412501, 3412502, 3412502, 3412503, 3412503, 3412503, 3412504, 3412504, 3412504, 3412505, 3413101, 3413201, 3413202, 3414101, 3414102, 3414201, 3414204, 3414300, 3415101, 3415101, 3415101, 3415102, 3415102, 3415102, 3415103, 3415200, 3415201, 3415400, 3415400, 3415600, 3415600, 3415600, 3416101, 3416102, 3416103, 3416104, 3416105, 3422101, 3422101, 3422102, 3422102, 3422108, 3422108, 3422201, 3422201, 3422204, 3422206, 3422301, 3422301, 3422301, 3422401, 3422402, 3422402, 3427101, 3427101, 3427102, 3427102, 3427102, 3427102, 3427103, 3427103, 3427103, 3427104, 3427105, 3427106, 3427106, 3427108, 3427108, 3432101, 3432102, 3432301, 3432400, 3432500, 3432800, 3434201, 3434202, 3434203, 3434204, 3434205, 3444300, 3444301, 3444302, 3444303, 3444503, 3444506, 3445101, 3445102, 3445104, 3446101, 3446102, 3446103, 3446104, 3446105, 3453101, 3453102, 3453103, 3453106, 3453107, 3453201, 3453202, 3453203, 3453206, 3453400, 3461101, 3461101, 3461102, 3461103, 3461104, 3461105, 3462101, 3462102, 3462103, 3462104, 3462104, 3512101, 3512103, 3512108, 3512401, 3512403, 3512404, 3515101, 3515102, 3515103, 3515400, 3516101, 3516103, 3516104, 3516201, 3516202, 3516204, 3517101, 3517102, 3517103, 3517103, 3517201, 3517202, 3518106, 3518107, 3518108, 3518109, 3518202, 3518203, 3518204, 3521101, 3521307, 3521500, 3521704, 3521705, 3521900, 3522101, 3522102, 3522105, 3522106, 3522201, 3522203, 3522301, 3522500, 3522600, 3523201, 3523205, 3523301, 3523305, 3523306, 3523600, 3531101, 3531103, 3531104, 3531303, 3531500, 3531700, 3531701, 3532102, 3532103, 3532303, 3532701, 3532702, 3532703, 3532801, 3532802, 3532803, 3532804, 3533101, 3533102, 3533103, 3533104, 3533202, 3533203, 3533301, 3533302, 3533303, 3534101, 3534102, 3534103, 3534106, 3534201, 3534202, 3534203, 3534301, 3535101, 3535200, 3535300, 3535400, 3536101, 3536102, 3536103, 3536104, 3536201, 3536202, 3536203, 3536204, 3541101, 3541102, 3541103, 3541104, 3541105, 3541106, 3541107, 3541107, 3542101, 3542102, 3542103, 3542104, 3542105, 3542106, 3542107, 3542108, 3542109, 3542110};

    int n = sizeof(arr) / sizeof(arr[0]);

    countFreq(arr, n);

    return 0;
}
